<?xml version="1.0" encoding="utf-8"?>
<library isWhitelist="true">
	<extension>
		<entryClass>webworks.extension.blackberry.applicationEvents</entryClass>
	</extension>

	<platforms>
		<platform value="AIR">
			<target version="default" config="AIR_XHR" />
		</platform>
	</platforms>

	<configurations>
		<configuration name="AIR_XHR" version="1.0" comment="For XHR architecture for Java implementation">
			<src type="text/javascript" path="../BlackBerry/js/common/blackberry_ns.js" comment="BlackBerry namespace common library" />
			<src type="text/javascript" path="js/common/app_dispatcher.js" comment="Application JS XHR dispatcher" />
			<src type="text/javascript" path="js/common/app_ns.js" comment="Application JS interface" />
			<src type="text/javascript" path="../Common_JS/transport/xhr/xhr.js" comment="JS XHR connection utilities" />
			<src type="text/actionscript" path="src/Air/ApplicationEvents/src/webworks/extension" comment="ActionScript implementation" />
		</configuration>
	</configurations>
	
	<features>
		<feature id="blackberry.app.event" version="1.0.0" />
	</features>
	
	<object name="blackberry.app.event" shortName="ApplicationEvent" introduced="1.0.0" comment="The Application Event object allows you to access events triggered by the application.">
		<example><![CDATA[
<script type="text/javascript">

  function trapForApplicationExit()
  {
		blackberry.app.event.onBackground(handleBackground);
  }


  function handleBackground()
  {         
		blackberry.app.exit();
  }


</script>]]></example>		

	    <functions>
			<func name="onBackground" static="true" returns="void" comment="Assigns a listener for when the application goes to the background.">
				<details>Only one function can be assigned to this event. To unregister the callback, simply call the onBackground method and pass in null for the callback parameter. 
						This event is fired whenever the application goes to the background, but has not ended. 						
				</details>
				<param name="callBack" type="String"
					comment="Function to be called when the application goes to the background." />
					
			</func>
			<func name="onForeground" static="true" returns="void" comment="Assigns a listener for when the application goes to the foreground.">
				<details>Only one function can be assigned to this event. To unregister the callback simply call the onForeground method and pass in null for the callback parameter. 
						This event is fired whenever the application comes to the foreground, for example, when the user re-opens the application from the application list.
				</details>
				<param name="callBack" type="String"
					comment="Function to be called when the application goes to the foreground." />
			</func>
	    </functions>
	</object>
</library>
