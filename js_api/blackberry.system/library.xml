<?xml version="1.0" encoding="utf-8"?>
<library>
	<extension id="blackberry.system">
		<entryClass>blackberry.system.System</entryClass>
	</extension>

	<platforms>
		<platform value="AIR">
			<target version="default" config="AIR_XHR" />
		</platform>
	</platforms>

	<configurations>
		<configuration name="AIR_XHR" version="1.0" comment="For XHR architecture for Java implementation">			
			<src type="text/javascript" path="js/common/system_dispatcher.js" comment="System JS XHR dispatcher" />
			<src type="text/javascript" path="js/common/system_ns.js" comment="System JS interface" />			
			<src type="text/actionscript" path="src/Air/System/src" comment="ActionScript implementation" />
		</configuration>
	</configurations>
	
	<features>
		<feature id="blackberry.system" version="1.0.0" />
	</features>
		
	<object name="blackberry.system" shortName="System" introduced="1.0.0"
		comment="The System object allows you to get access to system level functions and attributes of the BlackBerry PlayBook.">
		<details>The System object is static; all of its functions and
			properties are used directly from the object.</details>

		<example><![CDATA[<script type="text/javascript">
  
	// See if we are in coverage 
	if (!blackberry.system.hasDataCoverage()) {
		alert("You are not in coverage, we will attempt to send later");
	}

	// Check if we have GPS capability 
	if (blackberry.system.hasCapability("location.gps")) {
		alert("This device has a GPS.");
	}
	
</script>]]></example>
		<constants>
			<const name="ALLOW" type="Number" readonly="true" value="0"
				comment="Returned by hasPermission() indicating that the module requested is accessible." />
			<const name="DENY" type="Number" readonly="true" value="1"
				comment="Returned by hasPermission() indicating that the module is not accessible." />
		</constants>
		<functions>
			<func name="hasPermission" returns="Number" static="true" comment="Determines the level of access to the requested module.">
				<param name="module" type="String"
					comment="WebWorks namespace or class to check for access.  For example blackberry.system, blackberry.app." />
				<details>
					The possible return values:
					0 - ALLOW
					1 - DENY
                </details>
			</func>
			<func name="hasCapability" returns="Boolean" static="true" comment="This method will determine if the BlackBerry PlayBook is capable of the given service.">
				<param name="capability " type="String" comment="The capability being checked for." />
				<details>
					hasCapability() returns true if the BlackBerry PlayBook is capable of the service; false
					otherwise.

					The supported string values for 'capability' are:

					input.keyboard.issuretype (returns if the user is currently using
					SureType),
					input.touch,
					media.audio.capture,
					media.video.capture,
					media.recording,
					location.gps,
					location.maps,
					storage.memorycard (checks for an EXTERNAL SD card only),
					network.bluetooth,
					network.wlan (WLAN wireless family includes 802.11, 802.11a, 802.11b, 802.11g),
					network.3gpp (3GPP wireless family includes GPRS, EDGE, UMTS,
					GERAN, UTRAN, and GAN),
					network.cdma (CDMA wireless family includes CDMA1x and EVDO),
					and network.iden.
            	</details>
			</func>

			<func name="hasDataCoverage" returns="Boolean" static="true"
				comment="Returns true if the BlackBerry PlayBook is in coverage, otherwise returns false. This can be used in conjunction with the blackberry.network property to find out what kind of coverage it is in.">
				<details>
					Returns true if the BlackBerry PlayBook has any network interface active.
                </details>
			</func>

			<func name="isMassStorageActive" returns="Boolean" static="true"
				comment="Returns true if USB mass storage mode is active.">
				<details>
					Always returns false on the BlackBerry PlayBook since Mass Storage Mode is not
					supported. All memory is presented as a network share when
					connected by USB and is not blocked.
                </details>
			</func>

		</functions>

		<properties>
			<property name="scriptApiVersion" type="String" readonly="true"
				static="true"
				comment="Returns the current version of the WebWorks library being used." />
			<property name="softwareVersion" type="String" readonly="true"
				static="true"
				comment="Returns the current version of the operating system, for example, 1.0.0.0." />
			<property name="model" type="String" readonly="true" static="true"
				comment="Returns the model number of the BlackBerry PlayBook." />
		</properties>
		
	</object>
</library>
